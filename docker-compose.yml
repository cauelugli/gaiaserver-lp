version: "3.8"

services:
  frontend:
    build:
      context: .
      target: frontend-builder
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app/frontend
      - ./uploads:/app/frontend/public/static
    working_dir: /app/frontend
    command: npm run dev

  api:
    build: .
    ports:
      - "3000:3000"
    command: ["node", "api/index.js"]
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      - redis # Garante que o Redis esteja rodando antes da API

  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./uploads:/usr/share/nginx/html/static
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api
      - frontend

  redis:
    image: redis:alpine
    ports:
      - "6123:6379" # Acesso externo na porta 6123, mas dentro do Docker ainda é 6379
    volumes:
      - redis_data:/data

  queues:
    build: .
    command: ["node", "queues/index.js"] # Supondo que você tenha um worker BullJS aqui
    depends_on:
      - redis # Conecta-se ao serviço 'redis' interno
    # Não precisa expor a porta 6379, pois ele usa o Redis interno

volumes:
  redis_data:
